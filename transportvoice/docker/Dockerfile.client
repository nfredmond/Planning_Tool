# Build stage
FROM node:20-alpine as build

WORKDIR /app

# Copy package.json and package-lock.json
COPY client/package*.json ./

# Install dependencies
RUN npm ci --silent

# Copy the rest of the application
COPY client/ .

# Create .env file from environment variables
# This allows us to pass environment variables at build time
ARG REACT_APP_API_URL
ARG REACT_APP_MAPBOX_ACCESS_TOKEN
ARG REACT_APP_ENVIRONMENT
ARG REACT_APP_ENABLE_AI_FEATURES
ARG REACT_APP_ENABLE_VOICE_COMMENTS
ARG REACT_APP_ENABLE_ANALYTICS
ARG REACT_APP_GA_TRACKING_ID
ARG REACT_APP_GEMINI_API_KEY
ARG CLIENT_PORT

# Set default values for environment variables
ENV REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:5000/api}
ENV REACT_APP_MAPBOX_ACCESS_TOKEN=${REACT_APP_MAPBOX_ACCESS_TOKEN}
ENV REACT_APP_ENVIRONMENT=${REACT_APP_ENVIRONMENT:-production}
ENV REACT_APP_ENABLE_AI_FEATURES=${REACT_APP_ENABLE_AI_FEATURES:-true}
ENV REACT_APP_ENABLE_VOICE_COMMENTS=${REACT_APP_ENABLE_VOICE_COMMENTS:-true}
ENV REACT_APP_ENABLE_ANALYTICS=${REACT_APP_ENABLE_ANALYTICS:-true}
ENV REACT_APP_GA_TRACKING_ID=${REACT_APP_GA_TRACKING_ID}
ENV REACT_APP_GEMINI_API_KEY=${REACT_APP_GEMINI_API_KEY}
ENV PORT=${CLIENT_PORT:-3000}
ENV NODE_ENV=production

# Build for production
RUN npm run build

# Production stage with Nginx
FROM nginx:stable-alpine

# Copy build files from build stage
COPY --from=build /app/build /usr/share/nginx/html

# Copy nginx configuration
COPY docker/nginx/default.conf /etc/nginx/conf.d/default.conf

# Expose port
EXPOSE 80

# Add healthcheck
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 CMD wget --quiet --tries=1 --spider http://localhost:80 || exit 1

# Start the application
CMD ["nginx", "-g", "daemon off;"]